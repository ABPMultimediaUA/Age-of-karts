//Especificar version de Opengl a utilizar
#version 330 core

//Texturas donde se guardan los distintos datos
layout (location = 0) out vec3 defPosition;
layout (location = 1) out vec3 defNormal;
layout (location = 2) out vec4 defDiffuseSpecular;

// Variables de entrada desde el VertexShader
in data{
    vec2 textCoords; //Coordenadas de textura
    vec3 worldPos; // Fragmento en coordenadas del mundo 
    vec3 worldNormal; //Normal del Fragmento en coordenadas del mundo
} fs_in;

//Estructura con los datos del material
struct Material{
    //Componentes de color del material
    vec4 color_ambient;
    vec4 color_diffuse;
    vec4 color_specular;
    
    float brightness; //Brillo del material -> para el calculo de la la componente especular de la luz
};

//Uniforms
uniform Material material; //Material de la malla para cada vertice
uniform sampler2D texture_diffuse; //Textura difusa de la malla
uniform sampler2D texture_specular; //Textura especular de la malla

void main(){
    //Almacenamos la informacion de cada fragmento en los buffers correspondientes
    // --- POSICION ---
    defPosition = fs_in.worldPos;
    // --- NORMAL ---
    defNormal = normalize(fs_in.worldNormal);
    // --- TEXTURA DIFUSA Y ESPECULAR ---
    defDiffuseSpecular = vec4(vec3(texture(texture_diffuse, fs_in.textCoords).rgb), material.brightness);
}