//Especificar version de Opengl a utilizar
#version 330 core

// Variable de salida del Fragment
out vec4 FragColor; //Color final del pixel

//Variable de entrada del vertex shader
in vec2 textCoords;

//Textura del elemento hud
uniform sampler2D ourTexture;

//Color del elemento hud
uniform vec4 ourColor;

//Transparencia del elemento hud
uniform float transparencyLevel;
uniform bool transparency;

void main()
{
    //Se asigna la textura al vertice en funcion de las coordenadas de textura
    if (ourColor.w < 0.1){
        if (transparency == true){
             if (texture(ourTexture, textCoords).w > 0.0){
                FragColor = vec4(vec3(texture(ourTexture, textCoords)), transparency);
            }else{
                //Descartamos el fragmento si la transparencia de la imagen es 0, para que no borre nada de debajo
                discard;
            }
        }else{
             if (texture(ourTexture, textCoords).w > 0.0){
                FragColor = texture(ourTexture, textCoords);
            }else{
                //Descartamos el fragmento si la transparencia de la imagen es 0, para que no borre nada de debajo
                discard;
            }
        }
    }else{
        FragColor = ourColor;
    }
}