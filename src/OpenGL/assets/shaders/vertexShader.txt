#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec2 aTexCoords;
layout (location = 2) in vec3 aNormal;



out vec2 TexCoords;
out vec3 fragPos; // Vector de salida
out vec3 normal; // Vector de normales

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main()
{ 
    gl_Position = projection * view * model * vec4(aPos, 1.0);


    fragPos = vec3(model * vec4(aPos, 1.0));

    //Pasar el vector normal a coordenadas del mundo
    //Multiplicarlo por la traspuesta de la inversa de la esq. izq. superior de la matriz model
    normal = mat3(transpose(inverse(model))) * aNormal;

    TexCoords = aTexCoords;   
}